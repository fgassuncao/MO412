# -*- coding: utf-8 -*-
"""Assignment 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pqcAMZ0UcIDzA73jCj0nuvNi5RO-fwnO

## Fábio Gomes de Assunção 233664
## Assignment 2 - Phonecalls Degree Distribution Probabilites

## Imports
"""

import numpy as np
import networkx as nx #imports networkX stuff

"""## Reading"""

G = nx.read_edgelist("/content/phonecalls.edgelist.txt", create_using=nx.DiGraph) #Reads the network from .txt 
H = G.copy()
N = H.number_of_nodes() #Total number os Nodes

#H.edges() #Lists all edges of H

"""## In Degree"""

inDegrees = H.in_degree() #In degree links
inDegrees

"""## Out Degree"""

outDegrees = H.out_degree() #Out degree links
outDegrees

"""## Probability In"""

from collections import Counter
counterInDegress = Counter(dict(inDegrees).values()) #Counting number of receiving (insinding links) calls

N # total of nodes of H

list_pk = [] #Calculating the list of values of NKs (In)
for nk in counterInDegress.values(): 
  list_pk.append(nk/N)

list_n = []
list_n = list(counterInDegress.keys()) #Listing the inDegress of the Network

"""## Ploting In"""

import matplotlib.pyplot as plt #Ploting simple probabilities
plt.scatter(list_n,list_pk)
plt.ylabel("pK")
plt.xlabel("K")

plt.scatter(list_n,list_pk) #Ploting log10 probabilites
plt.yscale("log")
plt.xscale("log")
plt.ylabel("pK")
plt.xlabel("K")

"""## Probability Out"""

counterOutDegress = Counter(dict(outDegrees).values()) #Counting number of receiving (outsinding links) calls

N # total of nodes of H

list_pkOut = [] #Calculating the list of values of NKs (Out)
for nkOut in counterOutDegress.values(): 
  list_pkOut.append(nkOut/N)

list_nOut = []
list_nOut = list(counterOutDegress.keys()) #Listing the outDegress of the Network

"""## Ploting Out"""

import matplotlib.pyplot as plt #Ploting simple probabilities
plt.scatter(list_nOut,list_pkOut)
plt.ylabel("pK")
plt.xlabel("K")

plt.scatter(list_nOut,list_pkOut) #Ploting log10 probabilites
plt.yscale("log")
plt.xscale("log")
plt.ylabel("pK")
plt.xlabel("K")